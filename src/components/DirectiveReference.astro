---
interface Props {
  directive: string;
  description: string;
  required?: boolean;
}

const { directive, description, required = false } = Astro.props;
---

<section class="my-16" aria-label={`Reference for ${directive}`}>
  <div
    class="not-content sm:items-center flex max-sm:flex-col gap-2 justify-between"
  >
    <h3 class="text-2xl">{directive}</h3>

    {
      required && (
        <span class="text-2xs w-fit border rounded-md font-medium px-1 py-0.5 border-accent uppercase bg-gray-100 text-accent">
          Required
        </span>
      )
    }
  </div>

  <hr />

  <p>{description}</p>

  {
    Astro.slots.has("value") && (
      <div>
        <table class="w-full !table">
          <thead>
            <tr>
              <th class="bg-gray-100 text-left w-1/4" scope="row">
                Value
              </th>
            </tr>
          </thead>

          <tbody>
            <tr>
              <td class="text-left font-normal">
                <slot name="value" />
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    )
  }

  {
    Astro.slots.has("modifiers") && (
      <div class="[&>table]:table [&_thead>tr]:!bg-gray-100 [&_tr]:!bg-transparent [&>table]:w-full [&_th]:text-left [&_td]:align-top first:[&_th]:w-1/4">
        <slot name="modifiers" />
      </div>
    )
  }

  {
    Astro.slots.has("attributes") && (
      <div class="[&>table]:table [&_thead>tr]:!bg-gray-100 [&_tr]:!bg-transparent [&>table]:w-full [&_th]:text-left [&_td]:align-top first:[&_th]:w-1/4">
        <slot name="attributes" />
      </div>
    )
  }
</section>
